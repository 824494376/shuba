apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.1'

    defaultConfig {
        applicationId "com.qiwenge.android"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 302
        versionName "3.0.2"
        manifestPlaceholders = [meta_umeng_channel: "shuba"]
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    signingConfigs {
        release {
            try {
                storeFile file("/Users/Eric/Dev/Projects/shuba/resource/qiwenge.keystore.jks")
                storePassword KEYSTORE_PWD
                keyAlias KEY_ALIAS
                keyPassword KEY_PWD
            } catch (ex) {
                throw new InvalidUserDataException("You have to define KEYSTORE_PWD and KEY_PWD.")
            }
        }
    }

    productFlavors {
        shuba {}
//        googleplay {}
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [meta_umeng_channel: name]
    }

    buildTypes {
        debug {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [meta_umeng_appkey: UEMNG_APPKEY_DEV]
            signingConfig signingConfigs.release
        }

        release {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [meta_umeng_appkey: UMENG_APPKEY_RELEASE]
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // shuba_v2.0.0_2015-05-20_googleplay.apk
                        def fileName = "shuba_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.mcxiaoke.viewpagerindicator:library:2.4.1'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.2'
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile 'com.google.code.gson:gson:2.5'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.facebook.rebound:rebound:0.3.7'
    compile 'com.github.liuguangqiang.mvp:library:1.0.4'
    compile 'com.github.liuguangqiang.aframework:library:1.0.2'
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile 'de.greenrobot:eventbus:3.0.0-beta1'
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'io.reactivex:rxjava:1.0.14'
    compile 'cz.msebera.android:httpclient:4.3.6'
}

